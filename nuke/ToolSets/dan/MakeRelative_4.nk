#! /Applications/Nuke13.0v5/Nuke13.0v5.app/Contents/MacOS/libnuke-13.0.5.dylib -nx
version 13.0 v5
define_window_layout_xml {<?xml version="1.0" encoding="UTF-8"?>
<layout version="1.0">
    <window x="2560" y="25" w="2560" h="1387" maximized="1" screen="1">
        <splitter orientation="1">
            <split size="2556"/>
            <splitter orientation="1">
                <split size="0"/>
                <dock id="" hideTitles="1"/>
                <split size="2552"/>
                <splitter orientation="2">
                    <split size="1367"/>
                    <splitter orientation="1">
                        <split size="57"/>
                        <dock id="" hideTitles="1" activePageId="Toolbar.1">
                            <page id="Toolbar.1"/>
                        </dock>
                        <split size="1742"/>
                        <dock id="" activePageId="DAG.1" focus="true">
                            <page id="DAG.1"/>
                            <page id="DopeSheet.1"/>
                            <page id="Curve Editor.1"/>
                        </dock>
                        <split size="745"/>
                        <dock id="" activePageId="Properties.1">
                            <page id="Properties.1"/>
                        </dock>
                    </splitter>
                    <split size="0"/>
                    <dock id=""/>
                </splitter>
            </splitter>
            <split size="0"/>
            <dock id=""/>
        </splitter>
    </window>
    <window x="0" y="25" w="2560" h="1295" maximized="1" screen="0">
        <splitter orientation="2">
            <split size="1295"/>
            <dock id="" activePageId="Viewer.1">
                <page id="Viewer.1"/>
            </dock>
        </splitter>
    </window>
</layout>
}
Root {
 inputs 0
 name /Users/dansturm/.nuke/ToolSets/MakeRelative_4.nk
 colorManagement OCIO
 OCIO_config default-alexa-13
 defaultViewerLUT "OCIO LUTs"
 workingSpaceLUT scene_linear
 monitorLut rec709
 monitorOutLUT "rec709 (default)"
 int8Lut matte_paint
 int16Lut texture_paint
 logLut compositing_log
 floatLut scene_linear
 addUserKnob {20 "Motion Blur"}
 addUserKnob {26 gmbcl l "Global Motion Blur Controls"}
 addUserKnob {7 motionblur R 0 4}
 addUserKnob {7 shutter R 0 2}
 addUserKnob {4 shutteroffset l "shutter offset" M {centered start end}}
}
NoOp {
 inputs 0
 name Make_Comp_Relative
 xpos 978
 ypos 377
 addUserKnob {20 User}
 addUserKnob {26 MakeAll l "" +STARTLINE T "Make All Read Nodes Relative to Script Directory\n"}
 addUserKnob {22 MakeAllRelative l "Make All Relative" T "nuke.root().knob('project_directory').setValue(\"\[python \{nuke.script_directory()\}]\")\n\nreads = \[node for node in nuke.allNodes() if node.Class() == \"Read\"]\n\nfor x in reads:\n    filepath = x\[\"file\"].value()\n    if \"plates\" in filepath and \"../\" not in filepath:\n        new_string = \"../../..\"\n        new_path = new_string + filepath.split(\"comp\")\[-1]\n        print(new_path)\n        x\[\"file\"].setValue(new_path)" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {26 MakeSelected l "" +STARTLINE T "Make Selected Read Nodes Relative to Script Directory\n"}
 addUserKnob {22 MakeSelectedRelative l "Make Selected Relative" T "nuke.root().knob('project_directory').setValue(\"\[python \{nuke.script_directory()\}]\")\n\nreads = \[node for node in nuke.selectedNodes() if node.Class() == \"Read\"]\n\nfor x in reads:\n    filepath = x\[\"file\"].value()\n    if \"plates\" in filepath and \"../\" not in filepath:\n        new_string = \"../../..\"\n        new_path = new_string + filepath.split(\"comp\")\[-1]\n        print(new_path)\n        x\[\"file\"].setValue(new_path)\n" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {26 MakeLGRel l "" +STARTLINE T "Make All LiveGroups Relative\n"}
 addUserKnob {22 MGLRel l "Make All LiveGroups Relative" T "nuke.root().knob('project_directory').setValue(\"\[python \{nuke.script_directory()\}]\")\n\nreads = \[node for node in nuke.allNodes() if node.Class() == \"LiveGroup\"]\n\nfor x in reads:\n    filepath = x\[\"file\"].value()\n    if \"comp_files\" in filepath and \"../\" not in filepath:\n        new_string = \".\"\n        new_path = new_string + filepath.split(\"comp_files\")\[-1]\n        print(new_path)\n        x\[\"file\"].setValue(new_path)" +STARTLINE}
 addUserKnob {22 ReloadLGS l "Reload All LiveGroups" T "LGS = \[node for node in nuke.allNodes() if node.Class() == \"LiveGroup\"]\n\nfor x in LGS:\n    x.knob(\"reload_script\").execute()" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {26 SetStart l "" +STARTLINE T "Set Selected Read Nodes to Start on Frame 1001\n"}
 addUserKnob {22 SetStartButton l "Set Frame Start" T "for node in nuke.selectedNodes():\n  node\['frame_mode'].setValue('1')\n  node\['frame'].setValue('1001')" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {26 SetColorSpace l "" +STARTLINE T "Set Selected Read Nodes to Alternate ColorSpace\n"}
 addUserKnob {22 setSRGB l "Set to sRGB" T "for node in nuke.selectedNodes():\n  node\['colorspace'].setValue('sRGB')" +STARTLINE}
 addUserKnob {22 setAlexa l "Set to Alexa" -STARTLINE T "for node in nuke.selectedNodes():\n  node\['colorspace'].setValue('AlexaV3LogC')"}
 addUserKnob {22 setGamma24 l "Set to Gamma 2.4" -STARTLINE T "for node in nuke.selectedNodes():\n  node\['colorspace'].setValue('Gamma2.4')"}
}
